// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using s20351Retake.Models;

namespace s20351Retake.Migrations
{
    [DbContext(typeof(MainDbContext))]
    partial class MainDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("s20351Retake.Models.Client", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("IdClient");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            IdClient = 1,
                            FirstName = "Bartek",
                            LastName = "Bartkowski"
                        },
                        new
                        {
                            IdClient = 2,
                            FirstName = "Tomek",
                            LastName = "Nowak"
                        });
                });

            modelBuilder.Entity("s20351Retake.Models.ClientOrder", b =>
                {
                    b.Property<int>("IdClientOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdEmployee")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdClientOrder");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdEmployee");

                    b.ToTable("ClientOrders");

                    b.HasData(
                        new
                        {
                            IdClientOrder = 1,
                            Comments = "Some comments",
                            CompletionDate = new DateTime(2021, 6, 27, 10, 59, 16, 248, DateTimeKind.Local).AddTicks(3832),
                            IdClient = 1,
                            IdEmployee = 1,
                            OrderDate = new DateTime(2021, 6, 24, 10, 59, 16, 246, DateTimeKind.Local).AddTicks(2097)
                        },
                        new
                        {
                            IdClientOrder = 2,
                            Comments = "Some comments",
                            CompletionDate = new DateTime(2021, 6, 29, 10, 59, 16, 248, DateTimeKind.Local).AddTicks(5642),
                            IdClient = 2,
                            IdEmployee = 2,
                            OrderDate = new DateTime(2021, 6, 24, 10, 59, 16, 248, DateTimeKind.Local).AddTicks(5628)
                        });
                });

            modelBuilder.Entity("s20351Retake.Models.Confectionery", b =>
                {
                    b.Property<int>("IdConfectionery")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("PricePerOne")
                        .HasColumnType("real");

                    b.HasKey("IdConfectionery");

                    b.ToTable("Confectioneries");

                    b.HasData(
                        new
                        {
                            IdConfectionery = 1,
                            Name = "Confectionery 1",
                            PricePerOne = 50f
                        },
                        new
                        {
                            IdConfectionery = 2,
                            Name = "Confectionery 2",
                            PricePerOne = 100f
                        });
                });

            modelBuilder.Entity("s20351Retake.Models.Confectionery_ClientOrder", b =>
                {
                    b.Property<int>("IdClientOrder")
                        .HasColumnType("int");

                    b.Property<int>("IdConfectionery")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("IdClientOrder", "IdConfectionery");

                    b.HasIndex("IdConfectionery");

                    b.ToTable("Confectionery_ClientOrders");

                    b.HasData(
                        new
                        {
                            IdClientOrder = 1,
                            IdConfectionery = 1,
                            Amount = 30,
                            Comments = "comments"
                        },
                        new
                        {
                            IdClientOrder = 2,
                            IdConfectionery = 2,
                            Amount = 500,
                            Comments = "comments"
                        });
                });

            modelBuilder.Entity("s20351Retake.Models.Employee", b =>
                {
                    b.Property<int>("IdEmployee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("IdEmployee");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            IdEmployee = 1,
                            FirstName = "Michał",
                            LastName = "Michaulowski"
                        },
                        new
                        {
                            IdEmployee = 2,
                            FirstName = "Krzys",
                            LastName = "Krzysiowski"
                        });
                });

            modelBuilder.Entity("s20351Retake.Models.ClientOrder", b =>
                {
                    b.HasOne("s20351Retake.Models.Client", "Client")
                        .WithMany("ClientOrders")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("s20351Retake.Models.Employee", "Employee")
                        .WithMany("ClientOrders")
                        .HasForeignKey("IdEmployee")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("s20351Retake.Models.Confectionery_ClientOrder", b =>
                {
                    b.HasOne("s20351Retake.Models.ClientOrder", "ClientOrder")
                        .WithMany("Confectionery_ClientOrders")
                        .HasForeignKey("IdClientOrder")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("s20351Retake.Models.Confectionery", "Confectionery")
                        .WithMany("Confectionery_ClientOrders")
                        .HasForeignKey("IdConfectionery")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClientOrder");

                    b.Navigation("Confectionery");
                });

            modelBuilder.Entity("s20351Retake.Models.Client", b =>
                {
                    b.Navigation("ClientOrders");
                });

            modelBuilder.Entity("s20351Retake.Models.ClientOrder", b =>
                {
                    b.Navigation("Confectionery_ClientOrders");
                });

            modelBuilder.Entity("s20351Retake.Models.Confectionery", b =>
                {
                    b.Navigation("Confectionery_ClientOrders");
                });

            modelBuilder.Entity("s20351Retake.Models.Employee", b =>
                {
                    b.Navigation("ClientOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
